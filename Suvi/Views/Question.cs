#pragma warning disable 1591
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Suvi
{
using System;

#line 2 "Question.cshtml"
using System.Collections.Generic;

#line default
#line hidden
using System.Linq;
using System.Text;

#line 1 "Question.cshtml"
using Suvi.Data;

#line default
#line hidden


[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorTemplatePreprocessor", "2.6.0.0")]
public partial class Question : System.Web.Mvc.WebViewPage<Suvi.Data.Question>
{

#line hidden

public override void Execute()
{
WriteLiteral("<html");

WriteLiteral(" lang=\"en\"");

WriteLiteral(" xmlns=\"http://www.w3.org/1999/xhtml\"");

WriteLiteral("\n      xmlns:fb=\"http://ogp.me/ns/fb#\"");

WriteLiteral(">\n<head>\n  \n  <title>Survey in Pocket</title>\n  <meta");

WriteLiteral(" name=\"viewport\"");

WriteLiteral(" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable" +
"=no\"");

WriteLiteral(">\n  <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"Content/bootstrap.min.css\"");

WriteLiteral(" />\n  <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"Content/font-awesome.min.css\"");

WriteLiteral(" />\n  <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" href=\"Content/application.css\"");

WriteLiteral(" />\n  <script");

WriteLiteral(" src=\"Scripts/jquery-2.1.4.min.js\"");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" ></script>\n  <script");

WriteLiteral(" src=\"Scripts/frontend.js\"");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" ></script>\n  <style>\n  \thtml{\n  \t\theight: 100%;\n  \t}\n  </style>\n");


#line 21 "Question.cshtml"
  

#line default
#line hidden

#line 21 "Question.cshtml"
   if (ViewData.ContainsKey("CustomCss") && ViewData["CustomCss"] != null){

  	foreach(var css in (List<string>)ViewData["CustomCss"]){


#line default
#line hidden
WriteLiteral("  \t\t <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteAttribute ("href", " href=\"", "\""

#line 24 "Question.cshtml"
, Tuple.Create<string,object,bool> ("", css

#line default
#line hidden
, false)
);
WriteLiteral(" />\n");


#line 25 "Question.cshtml"
  	}
  }


#line default
#line hidden
WriteLiteral("\n</head>\n<body>\n");


#line 30 "Question.cshtml"
Write(Html.Partial("Suvi.Header, Suvi", Model));


#line default
#line hidden
WriteLiteral("\n\n<main>\n<div");

WriteLiteral(" class=\"container-fluid feedback-container\"");

WriteLiteral(">\n\n<article");

WriteLiteral(" class=\"page question-page widget\"");

WriteLiteral(">\n  <div");

WriteLiteral(" class=\"col-xs-12\"");

WriteLiteral(">\n    <div");

WriteLiteral(" class=\"widget-extra\"");

WriteLiteral(">\n");


#line 38 "Question.cshtml"
      

#line default
#line hidden

#line 38 "Question.cshtml"
       if(Model.QuestionType != QuestionType.Info)
      {


#line default
#line hidden
WriteLiteral("          <div");

WriteLiteral(" class=\"question-title\"");

WriteLiteral(">\n            <div");

WriteLiteral(" class=\"widget-content-light question-title-inside\"");

WriteLiteral(">\n              <p>");


#line 42 "Question.cshtml"
            Write(Model.QuestionText);


#line default
#line hidden
WriteLiteral("</p>\n            </div>\n          </div>\n");

WriteLiteral("          <div");

WriteLiteral(" class=\"question-content\"");

WriteLiteral(">\n");


#line 46 "Question.cshtml"
          	

#line default
#line hidden

#line 46 "Question.cshtml"
             switch(Model.QuestionType)
          	{
          		case QuestionType.StarRating:
          			

#line default
#line hidden

#line 49 "Question.cshtml"
               Write(Html.Partial("Suvi.StarRating, Suvi", Model));


#line default
#line hidden

#line 49 "Question.cshtml"
                                                                 
          			break;
          		case QuestionType.SmileyFace:
          			

#line default
#line hidden

#line 52 "Question.cshtml"
               Write(Html.Partial("Suvi.SmileyFace, Suvi", Model));


#line default
#line hidden

#line 52 "Question.cshtml"
                                                                 
          			break;
          		case QuestionType.Image:
          			

#line default
#line hidden

#line 55 "Question.cshtml"
               Write(Html.Partial("Suvi.Image, Suvi", Model));


#line default
#line hidden

#line 55 "Question.cshtml"
                                                            
          			break;
          		case QuestionType.TextInput:
          			

#line default
#line hidden

#line 58 "Question.cshtml"
               Write(Html.Partial("Suvi.TextInput, Suvi", Model));


#line default
#line hidden

#line 58 "Question.cshtml"
                                                                
          			break;
          		case QuestionType.MultipleChoice:
          			

#line default
#line hidden

#line 61 "Question.cshtml"
               Write(Html.Partial("Suvi.MultipleChoice, Suvi", Model));


#line default
#line hidden

#line 61 "Question.cshtml"
                                                                     
          			break;

          	}


#line default
#line hidden
WriteLiteral("          </div>\n");


#line 66 "Question.cshtml"
      }
      else{
      	

#line default
#line hidden

#line 68 "Question.cshtml"
   Write(Html.Partial("Suvi.Information, Suvi", Model));


#line default
#line hidden

#line 68 "Question.cshtml"
                                                      
      }


#line default
#line hidden
WriteLiteral("\n    </div>\n  </div>\n</article>\n</div>\n</main>\n</body>\n</html>\n\n");

}
}
}
#pragma warning restore 1591
